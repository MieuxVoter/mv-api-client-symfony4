// Main Entrypoint.

$spacer: 2.618rem;
//$headings-margin-bottom: $spacer / 1.1 !default;

// See _variables.scss for the available variables
// We may import it as well for code completion convenience,
// but we did not mod it and therefore do not need it.
@import "_variables";
@import "unicon";

// the ~ allows referencing things in node_modules
// We're using Spectre.css : https://picturepan2.github.io/spectre/
//@import "~bootstrap/scss/bootstrap";
@import "~spectre.css";

// Local imports
@import "spinner";


html, body {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;

  & > header {
    padding: 0.3em 1em;
    a:not(.btn) {
      color: $body-bg;
      font-weight: bold;
      &:visited {
        color: darken($body-bg, 3%);
      }
    }
  }

  & > footer {
    //flex-shrink: 0;
    color: lighten($body-bg, 10%);
    background-color: lighten($body-font-color, 10%);
    padding: 2em 1em;

    a:not(.btn) {
      color: $body-bg;
      font-weight: bold;
      &:visited {
        color: darken($body-bg, 3%);
      }
    }
  }

  & > .main.container {
    flex: 1 0 auto;
    padding-bottom: 2rem;
  }

}


a {
  // Border radius will also affect the outline on Firefox, but not on Chromium.
  // Having a rounded outline looks nice, so we set this.
  border-radius: 8px;
}

a.with-image {
  // The point is to resize the anchor to wrap around the image inside.
  display: inline-block;
}

.main.container a:visited::after {
  // This selector is ignored by (at least) Firefox and Chromium.
  // It would be nice, probably, to have it.
  content: "👁";
}


header a:focus,
footer a:focus {
  outline: $secondary-color 3px solid;
}

.main.container a:focus {
  outline: $primary-color 3px solid;
}

.container.breathe-top {
  padding-top: 2rem;
}

.container.tight-top {
  padding-top: 0 !important;
}

///
///

hr {
  border-bottom-color: $secondary-color;
  border-bottom-width: 2px;
  border-bottom-style: solid;
}

label {
  cursor: pointer;
}

input.input-error {
  //border-color: red; // OMG WTF IS HAPPENING
  box-shadow: red 4px 0 0 0;
}

///
///

.alert {
  @extend .toast;
}

.alert-error {
  @extend .toast-error;
}

.line {
  display: inline-block;
}

.justify-content-evenly {
  justify-content: space-evenly;
}

.with-aligned-buttons a.btn {
  min-width: 15%;
}

.text-bigger {
  font-size: $font-size * 1.618;
}

.text-much_bigger {
  font-size: $font-size * 1.618 * 1.618;
}

.text-gigantic {
  font-size: $font-size * 1.618 * 1.618 * 1.618;
}

.monospace {
  font-family: monospace;
}

.btn.btn-xlg {
  font-size: 1.1rem;
  height: 3rem;
  padding: .35rem .6rem;
}

.btn.btn-action.btn-xlg {
  width: 3rem;
}

.flex-grow {
  flex-grow: 1;
}

.banner {
  text-align: center;
  font-size: 1.618rem;
}

///
///

$hidden-checkbox-offset: 30px;

.form-radio-grade-check > label:first-child {
  font-size: $font-size-lg * 1.618;
  cursor: default;
}

.form-radio-grade {

  display: flex;
  flex-wrap: wrap;
  align-items: stretch;

  margin-bottom: 2rem;

  .choice-widget-element {
    //.form-radio-grade-check {

    flex-grow: 1;

    input[type=radio] {

      display: inline;
      position: absolute;

      // Keep display for keyboard accessibility, use opacity instead
      //display: none;
      opacity: 0;

      //background-color: #f39;

      & + label {
        display: inline-block;
        padding: $spacer/3 $spacer/4;
        padding-bottom: 0;
        padding-top: $hidden-checkbox-offset;
        border: 1px solid $secondary-color;
        width: 100%;
        height: 100%;
        //line-height: 100%;
        //vertical-align: middle;
        text-align: center;
        overflow-wrap: break-word;
        user-select: none;

        margin-bottom: 2em;
      }

      &:checked + label {
        border: 1px solid $primary-color;
        background-color: darken($primary-color, 0%);
        color: $secondary-color;
      }

      &:focus + label {
        border: 1px dotted white;
      }
    }
  }
}
