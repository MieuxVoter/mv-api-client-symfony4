security:
    encoders:
        # Not 100% sure we need this, with our setup
        App\Entity\User: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        mvapi_users: { id: App\Security\UserProvider }
    firewalls:
#        wtf:
#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
#            guard:
#                authenticators:
#                    - App\Security\ApiGuardAuthenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        home:
#            pattern: ^/(home[.]html)?$
#            anonymous: true
#        login:
#            pattern: ^/login([.]html)?$
#            anonymous: true
#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
#            guard:
#                authenticators:
#                    - App\Security\ApiGuardAuthenticator
#        logout:
#            pattern: ^/logout([.]html)?$
#            anonymous: true
#        registration:
#            pattern: ^/(quick-)?register[.]html$
#            anonymous: true
#            security: false
#        polls_index:
#            pattern: ^/polls([.]html)?$
#            anonymous: true
        main:
            anonymous: true
            provider: mvapi_users

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            guard:
                authenticators:
                    - App\Security\ApiGuardAuthenticator


            # https://symfony.com/doc/current/security/form_login_setup.html
            # Disabling this to try out sessions instead of accounts.
            # This way we don't have to have a database on this client.
#            form_login:
#                login_path: /gate.html
#                check_path: /login.html
#                default_target_path: /profile.html
#                username_parameter: username
#                password_parameter: password

            logout:
                path: logout

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: '^/profile', roles: ROLE_USER }
        - { path: '^/login([.]html)?$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/(home([.]html)?)?$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
